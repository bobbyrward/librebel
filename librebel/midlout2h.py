import re
import sys

hresult_re = re.compile(r'STDMETHOD\((.*?)\)\(\s*THIS_?\s*(.*?)\)\s*PURE\s*;\s*')
rval_re = re.compile(r'STDMETHOD_\((.*?), (.*?)\)\(\s*THIS_?\s*(.*?)\)\s*PURE\s*;\s*')

# this
"""STDMETHOD(EndStateBlock)(THIS_ IDirect3DStateBlock9** ppSB) PURE;
"""

# to this
"""HRESULT EndStateBlock(IDirect3DStateBlock9** ppSB) {
    return (*this)->EndStateBlock(ppSB);
}
"""


def output_func_call(outfile, rval, name, params):
    splitParams = [ x.strip().rsplit(' ', 1) for x in params.split(',') ]

    if len(splitParams) == 1 and len(splitParams[0]) == 1:
        outfile.write("\t\t%s %s() {\n" % (rval, name))
        outfile.write("\t\t\treturn _device->%s();\n" % name)
        outfile.write("\t\t}\n\n")
    else:
        outfile.write("\t\t%s %s(%s) {\n" %(rval, name, params))

        param_names = ', '.join([ x[1].strip('*') for x in splitParams ])

        outfile.write("\t\t\treturn _device->%s(%s);\n" % (name, param_names))
        outfile.write("\t\t}\n\n")


with open('render_device_midlout.txt') as fd:
    with open('render_device_methods.h', 'w') as outfile:
        outfile.write('/*************************************************/\n')
        outfile.write('/*    This file is autogenerated by midlout2h.   */\n')
        outfile.write('/*                 DO NOT EDIT                   */\n')
        outfile.write('/*************************************************/\n')
        outfile.write('\n')


        for line in fd:
            print line

            if hresult_re.match(line):
                output_func_call(outfile, 'HRESULT', *hresult_re.match(line).groups())
            elif rval_re.match(line):
                output_func_call(outfile, *rval_re.match(line).groups())
            else:
                if(line.strip()):
                    raise RuntimeError('Unmatchable line "%s"' % line)



